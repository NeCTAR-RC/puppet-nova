[DEFAULT]
state_path=/var/lib/nova
lock_path=/var/lock/nova
bindir=/usr/bin
rootwrap_config=/etc/nova/rootwrap.conf
auth_strategy=keystone

# Logging
<% if @logdebug -%>
verbose=True
debug=True
<%- end -%>
logdir=/var/log/nova
use_syslog=true
syslog_log_facility=LOG_DAEMON

#libvirt
libvirt_use_virtio_for_bridges=True
live_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE,VIR_MIGRATE_PEER2PEER,VIR_MIGRATE_LIVE
block_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE,VIR_MIGRATE_PEER2PEER,VIR_MIGRATE_NON_SHARED_INC,VIR_MIGRATE_LIVE
remove_unused_base_images=False
running_deleted_instance_action=reap

ram_allocation_ratio=<%= cell_config['ram_allocation_ratio'] %>
cpu_allocation_ratio=<%= cell_config['cpu_allocation_ratio'] %>
reserved_host_memory_mb=<%= cell_config['reserved_host_memory'] %>
reserved_host_disk_mb=<%= cell_config['reserved_host_disk'] %>

# Memcache
memcached_servers=<%= cell_config['memcached_servers'] %>

# RabbitMQ
rabbit_hosts="<%= cell_config['rabbit_hosts'] %>"
<% if cell_config['rabbit_ha'] %>
rabbit_ha_queues=True
<% end %>
rabbit_userid=<%= cell_config['rabbit_user'] %>
rabbit_password=<%= cell_config['rabbit_pass'] %>
rabbit_durable_queues=True
<% if cell_config['rabbit_ssl'] %>
rabbit_use_ssl=True
<% end %>
rabbit_virtual_host=<%= cell_config['rabbit_virtual_host'] %>

# Networking
network_manager=nova.network.manager.FlatDHCPManager
force_dhcp_release=True
dhcp_domain=<%= cell_config['dhcp_domain'] %>
dhcpbridge_flagfile=/etc/nova/nova.conf
dnsmasq_config_file=/etc/nova/dnsmasq.conf
multi_host=True
allow_same_net_traffic=false

# VNC
vncserver_listen=0.0.0.0
vncserver_proxyclient_address=<%= vncserver_proxyclient_address %>
novncproxy_base_url=http://<%= cell_config['vnc_host'] %>:6080/vnc_auto.html

# Metadata
metadata_workers = <%= metadata_workers %>

# Quota
quota_fixed_ips=-1

<%- if @send_notifications -%>
# Notifications
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
<%- end -%>

<% extra_config.keys.sort.each do |key| -%>
<%= key %> = <%= extra_config[key] %>
<% end -%>

[glance]
api_servers=<%= cell_config['glance_servers'] %>

[database]
connection=mysql://<%= cell_config['db_user'] %>:<%= cell_config['db_pass'] %>@<%= cell_config['db_host'] %>/<%= cell_config['db_name'] %>
idle_timeout=60

<%- if @icehouse_compat -%>
[upgrade_levels]
compute=icehouse-compat
<% end -%>

<% if cell_config['use_cells'] -%>
[cells]
enable=true
name=<%= cell_config['cells_name'] %>
cell_type=compute
<% end -%>
