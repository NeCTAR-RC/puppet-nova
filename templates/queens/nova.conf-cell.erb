[DEFAULT]
state_path=/var/lib/nova
bindir=/usr/bin
rootwrap_config=/etc/nova/rootwrap.conf
rpc_response_timeout = 300
service_down_time = 300

# Logging
<% if @logdebug -%>
debug=True
<%- end -%>
log_dir=/var/log/nova
use_stderr=false
use_syslog=true
syslog_log_facility=LOG_USER

transport_url="<%= @cell_config['transport_url'] %>"

ram_allocation_ratio=<%= @cell_config['ram_allocation_ratio'] %>
cpu_allocation_ratio=<%= @cell_config['cpu_allocation_ratio'] %>
reserved_host_memory_mb=<%= @cell_config['reserved_host_memory'] %>
reserved_host_disk_mb=<%= @cell_config['reserved_host_disk'] %>
multi_instance_display_name_template='Server %(uuid)s'

block_device_allocate_retries=120
block_device_allocate_retries_interval=10

<% if @restrict_zones -%>
# Nectar Custom
restrict_zones=<%= @restrict_zones %>
<% end -%>

# Extra
<% @extra_config.keys.sort.each do |key| -%>
<%   if @extra_config[key].is_a? Array -%>
<%     @extra_config[key].each do |value| -%>
<%=      key %> = <%= value %>
<%     end -%>
<%   else -%>
<%=    key %> = <%= @extra_config[key] %>
<%   end -%>
<% end -%>

#networking
linuxnet_interface_driver = nova.network.linux_net.NeutronLinuxBridgeInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[scheduler]
max_placement_results=3000

[filter_scheduler]
available_filters=nova.scheduler.filters.all_filters
<% if @cell_config['scheduler_available_filters'] -%>
<% @cell_config['scheduler_available_filters'].each do |sched_plugin| -%>
available_filters=<%= sched_plugin %>
<% end -%>
<% end -%>
enabled_filters=<%= @cell_config['scheduler_default_filters'] %>

[oslo_policy]
policy_file=/etc/nova/policy.yaml

[oslo_messaging_rabbit]
<% if @cell_config['rabbit_ha'] -%>
rabbit_ha_queues=True
<% end -%>
amqp_durable_queues=True
<% if @cell_config['rabbit_ssl'] -%>
ssl=True
ssl_version=TLSv1_2
rabbit_use_ssl=True
<% end -%>
heartbeat_timeout_threshold=60

[oslo_concurrency]
lock_path = $state_path/lock

[neutron]
url = <%= @neutron_url %>
service_metadata_proxy=True
<%- if @default_networks -%>
default_networks = <%= @default_networks.join(',') %>
<%- end -%>
auth_type = v3password
auth_url = <%= @keystone_protocol %>://<%= @keystone_host %>:5000/v3
username = <%= @cell_config['keystone_user'] %>
password = <%= @cell_config['keystone_password'] %>
user_domain_name = Default
project_name = <%= @keystone_service_tenant %>
project_domain_name = Default

[placement]
auth_type = v3password
auth_url = <%= @keystone_protocol %>://<%= @keystone_host %>:5000/v3
username = <%= @cell_config['keystone_user'] %>
password = <%= @cell_config['keystone_password'] %>
user_domain_name = Default
project_name = <%= @keystone_service_tenant %>
project_domain_name = Default
os_region_name=<%= @cell_config['placement_region'] %>

[oslo_messaging_notifications]
driver=messagingv2

[notifications]
notify_api_faults = true
notify_cell_instance_faults = true
notify_on_state_change = vm_and_task_state
notification_format=unversioned

[cache]
enabled=True
backend=oslo_cache.memcache_pool
memcache_servers=<%= @cell_config['memcached_servers'] %>

[glance]
api_servers=<%= @cell_config['glance_servers'] %>
num_retries=3

[cinder]
cross_az_attach=False
<%- if @cinder_endpoint_template -%>
endpoint_template=<%= @cinder_endpoint_template %>
<%- end -%>

[conductor]
<% if not @use_conductor -%>
use_local=true
<% end -%>
workers = <%= @conductor_workers %>

[database]
connection=mysql+pymysql://<%= @cell_config['db_user'] %>:<%= @cell_config['db_pass'] %>@<%= @cell_config['db_host'] %>/<%= @cell_config['db_name'] %>
<% if @cell_config['db_max_pool_size'] %>max_pool_size=<%= @cell_config['db_max_pool_size'] %><% end %>
<% if @cell_config['db_max_overflow'] %>max_overflow=<%= @cell_config['db_max_overflow'] %><% end %>
<%- if @cell_config['connection_recycle_time'] -%>
connection_recycle_time=<%= @cell_config['connection_recycle_time'] %>
<%- end -%>

[api_database]
connection=<%= @api_db_connection %>
<%- if @cell_config['connection_recycle_time'] -%>
connection_recycle_time=<%= @cell_config['connection_recycle_time'] %>
<%- end -%>

<%- if @upgrade_level -%>
[upgrade_levels]
compute=<%= @upgrade_level %>

<%- end -%>
