[DEFAULT]
state_path=/var/lib/nova
lock_path=/var/lock/nova
bindir=/usr/bin
rootwrap_config=/etc/nova/rootwrap.conf
auth_strategy=keystone

# Logging
<% if @logdebug -%>
verbose=True
debug=True
<%- end -%>
logdir=/var/log/nova
use_syslog=true
syslog_log_facility=LOG_DAEMON

# Scheduler
compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler
ram_allocation_ratio=<%= cell_config['ram_allocation_ratio'] %>
cpu_allocation_ratio=<%= cell_config['cpu_allocation_ratio'] %>
reserved_host_memory_mb=<%= cell_config['reserved_host_memory'] %>
reserved_host_disk_mb=<%= cell_config['reserved_host_disk'] %>
scheduler_default_filters=<%= cell_config['scheduler_default_filters'] %>
compute_fill_first_cost_fn_weight=<%= cell_config['compute_fill_weight'] %>
multi_instance_display_name_template='Server %(uuid)s'

# Authentication
keystone_ec2_url = <%= scope.function_hiera(['keystone::protocol']) %>://<%= scope.function_hiera(['keystone::host']) %>:5000/v2.0/ec2tokens
auth_strategy=keystone
keystone_auth_url=<%= scope.function_hiera(['keystone::protocol']) %>://<%= scope.function_hiera(['keystone::host']) %>:5000/v2.0

# Image Service
image_service=nova.image.glance.GlanceImageService
glance_api_servers=<%= cell_config['glance_servers'] %>

# RabbitMQ
rabbit_hosts="<%= cell_config['rabbit_hosts'] %>"
<% if cell_config['rabbit_ha'] %>
rabbit_ha_queues=True
<% end %>
rabbit_userid=<%= cell_config['rabbit_user'] %>
rabbit_password=<%= cell_config['rabbit_pass'] %>
rabbit_durable_queues=True
<% if cell_config['rabbit_ssl'] %>
rabbit_use_ssl=True
<% end %>
rabbit_virtual_host=<%= cell_config['rabbit_virtual_host'] %>
<% if cell_config['rabbit_max_retries'] %>rabbit_max_retries=<%= cell_config['rabbit_max_retries'] %><% end %>

<% if cell_config['rpc_response_timeout'] -%>
# RPC
rpc_response_timeout=<%= cell_config['rpc_response_timeout'] %>

<% end -%>
# Memcached
memcached_servers=<%= cell_config['memcached_servers'] %>

# Network
network_manager=nova.network.manager.FlatDHCPManager

# Quota
<% if @cell_config['reservation_expire'] %>reservation_expire=<%= cell_config['reservation_expire'] %><% end %>

# Extra
<% extra_config.keys.sort.each do |key| -%>
<%   if extra_config[key].is_a? Array -%>
<%     extra_config[key].each do |value| -%>
<%=      key %> = <%= value %>
<%     end -%>
<%   else -%>
<%=    key %> = <%= extra_config[key] %>
<%   end -%>
<% end -%>

[conductor]
<% if not @use_conductor -%>
use_local=true
<% end -%>
workers = <%= @conductor_workers %>

[database]
connection=mysql://<%= cell_config['db_user'] %>:<%= cell_config['db_pass'] %>@<%= cell_config['db_host'] %>/<%= cell_config['db_name'] %>
idle_timeout=60

<%- if @icehouse_compat -%>
[upgrade_levels]
scheduler=havana
compute=icehouse-compat
<% end -%>

<% if cell_config['use_cells'] %>
# Quota
quota_driver=nova.quota.NoopQuotaDriver

[cells]
enable=true
name=<%= cell_config['cells_name'] %>
cell_type=compute
heal_update_number=<%= cell_config['cells_heal_update_number'] %>
<% if @cell_config['cells_instance_updated_at_threshold'] -%>
instance_updated_at_threshold=<%= cell_config['cells_instance_updated_at_threshold'] %>
<% end -%>
<% if @cell_config['cells_instance_update_num_instances'] -%>
instance_update_num_instances=<%= cell_config['cells_instance_update_num_instances'] %>
<% end -%>
<% if @cell_config['cells_capabilities'] -%>
capabilities="<%= cell_config['cells_capabilities'] %>"
<% end -%>
<% if @cell_config['cells_expire_reservations'] -%>
expire_reservations=<%= cell_config['cells_expire_reservations'] %>
<% end -%>
<% if @cell_config['cells_scheduler_direct_only_cells'] -%>
scheduler_direct_only_cells=<%= cell_config['cells_scheduler_direct_only_cells'] %>
<% end %>
<% if @cell_config['cells_call_timeout'] -%>
call_timeout="<%= cell_config['cells_call_timeout'] %>"
<% end -%>
<% if @cell_config['capacity_aggregate_key'] -%>
capacity_aggregate_key="<%= cell_config['capacity_aggregate_key'] %>"
<% end -%>
<% if @cell_config['reserve_percent'] -%> 
reserve_percent=<%= cell_config['reserve_percent'] %> 
<% end -%> 
<% end -%>
